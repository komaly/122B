2 optimization techniques:

1) implementing batch insert and auto commit
2) using caching by storing the tables from the MySQL database into hashmaps and looking through the hashmaps 
for items

By implementing batch insert, the SQL queries are performed as one transaction instead of several, individual
transactions. By disabling auto commit and committing everything at the end, the database changes are not
forced to disk until commit is called. This way, everything is sent at one time. Both these methods increase 
optimization immensely.

By using caching via hashmaps, the SQL tables in the databases don't have to be repeatedly pulled from the
database and iterated through. I just got the SQL table once, put all the items into the hashmap, and just checked if 
the elements were in the hashmap when I needed to. The hashmap is a very memory efficient data structure as well,
further optimizing the program. 

These techniques make my program run in seconds. Before implementing them, my 
program would run for several minutes and then produce a memory error, stating that I had run out of memory
to use.